#include <iostream>
using namespace std;

class Arithmetic
{
private:
    int a;
    int b;
public:
    
    Arithmetic(int a,int b)
    {
        this->a=a;
        this->b=b;
    }
    
    int add()
    {
        return a+b;
    }
    
    int sub()
    {
        return a-b;
    }
}; 

int main()
{
    Arithmetic ar(10,5);
    cout<< "add= "<<ar.add()<<endl;
    cout<< "sub= "<<ar.sub()<<endl;
    return 0;
}
-----------------------------------------------
if we wantt to implement funs in outside, we need to declere in a class and need to implement in out side with the scope resolutuion

#include <iostream>
using namespace std;

class Arithmetic
{
private:
    int a;
    int b;
public:
    Arithmetic(int a,int b);
    int add();
    int sub();

};    
    Arithmetic::Arithmetic(int a,int b)
    {
        this->a=a;
        this->b=b;
    }
    
    int Arithmetic::add()
    {
        return a+b;
    }
    
    int Arithmetic::sub()
    {
        return a-b;
    }

int main()
{
    Arithmetic ar(10,5);
    cout<< "add= "<<ar.add()<<endl;
    cout<< "sub= "<<ar.sub()<<endl;
    return 0;
}

--------------------------------------------------

#include <iostream>
using namespace std;

template<class T>
class Arithmetic
{
private:
    T a;
    T b;
public:
    Arithmetic(T a,T b);
    T add();
    T sub();

};    
    
    template<class T>
    Arithmetic<T>::Arithmetic(T a,T b)
    {
        this->a=a;
        this->b=b;
    }
    
    template<class T>
    T Arithmetic<T>::add()
    {
        return a+b;
    }
    
    template<class T>
    T Arithmetic<T>::sub()
    {
        return a-b;
    }

int main()
{
    Arithmetic<char> ar('a','b');
    cout<< "add= "<<(int)ar.add()<<endl;
    cout<< "sub= "<<(int)ar.sub()<<endl;
    return 0;
}
